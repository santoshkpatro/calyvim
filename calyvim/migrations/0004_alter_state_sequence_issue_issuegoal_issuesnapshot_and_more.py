# Generated by Django 5.2.3 on 2025-06-26 17:27

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("calyvim", "0003_team_issue_prefix"),
    ]

    operations = [
        migrations.AlterField(
            model_name="state",
            name="sequence",
            field=models.FloatField(default=10000),
        ),
        migrations.CreateModel(
            name="Issue",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "issue_type",
                    models.CharField(
                        choices=[
                            ("task", "Task"),
                            ("goal", "Goal"),
                            ("story", "Story"),
                        ],
                        default="task",
                        max_length=16,
                    ),
                ),
                ("summary", models.CharField(max_length=512)),
                ("description", models.TextField(blank=True, null=True)),
                ("name", models.CharField(blank=True, max_length=32)),
                ("number", models.IntegerField(blank=True)),
                ("sequence", models.FloatField(default=50000)),
                ("due_date", models.DateField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("archived_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_issues",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "goal",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="goal_issues",
                        to="calyvim.issue",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="issues",
                        to="calyvim.organization",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sub_issues",
                        to="calyvim.issue",
                    ),
                ),
                (
                    "state",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="issues",
                        to="calyvim.state",
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="team_issues",
                        to="calyvim.team",
                    ),
                ),
            ],
            options={
                "verbose_name": "Issue",
                "verbose_name_plural": "Issues",
                "db_table": "issues",
                "ordering": ["sequence", "number"],
            },
        ),
        migrations.CreateModel(
            name="IssueGoal",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                        ],
                        default="pending",
                        max_length=16,
                    ),
                ),
                ("reviewed_at", models.DateTimeField(blank=True, null=True)),
                ("comment", models.TextField(blank=True, null=True)),
                (
                    "goal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="goals",
                        to="calyvim.issue",
                    ),
                ),
                (
                    "reviewed_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="reviewed_goal_issues",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="team_issue_goals",
                        to="calyvim.team",
                    ),
                ),
            ],
            options={
                "verbose_name": "Issue Goal",
                "verbose_name_plural": "Issue Goals",
                "db_table": "issue_goals",
                "ordering": ["goal", "team"],
            },
        ),
        migrations.CreateModel(
            name="IssueSnapshot",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("date", models.DateField()),
                (
                    "issue",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="snapshots",
                        to="calyvim.issue",
                    ),
                ),
                (
                    "state",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="issue_snapshots",
                        to="calyvim.state",
                    ),
                ),
            ],
            options={
                "verbose_name": "Issue Snapshot",
                "verbose_name_plural": "Issue Snapshots",
                "db_table": "issue_snapshots",
                "ordering": ["date"],
            },
        ),
        migrations.AddConstraint(
            model_name="issue",
            constraint=models.UniqueConstraint(
                fields=("team", "number"), name="unique_issue_number_per_team"
            ),
        ),
        migrations.AddConstraint(
            model_name="issue",
            constraint=models.UniqueConstraint(
                fields=("organization", "name"),
                name="unique_issue_name_per_organization",
            ),
        ),
        migrations.AddConstraint(
            model_name="issuegoal",
            constraint=models.UniqueConstraint(
                fields=("goal", "team"), name="unique_goal_per_team"
            ),
        ),
        migrations.AddConstraint(
            model_name="issuesnapshot",
            constraint=models.UniqueConstraint(
                fields=("issue", "state", "date"),
                name="unique_issue_snapshot_per_issue_state_date",
            ),
        ),
    ]
